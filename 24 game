from typing import List

class Solution:
    def judgePoint24(self, cards: List[int]) -> bool:
        def dfs(nums):
            if len(nums) == 1:
                return abs(nums[0] - 24) < 1e-6
            
            for i in range(len(nums)):
                for j in range(len(nums)):
                    if i != j:
                        # Remaining numbers after removing nums[i] and nums[j]
                        next_nums = [nums[k] for k in range(len(nums)) if k != i and k != j]
                        a, b = nums[i], nums[j]

                        # Try all operations
                        for op in [
                            a + b,
                            a - b,
                            b - a,
                            a * b,
                            a / b if b != 0 else float('inf'),
                            b / a if a != 0 else float('inf')
                        ]:
                            if dfs(next_nums + [op]):
                                return True
            return False
        
        # Convert input to float for division accuracy
        return dfs(list(map(float, cards)))
